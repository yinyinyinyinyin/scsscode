@charset "UTF-8";
/*1.变量*/
@import url(tt.css);
.mycolor {
  color: blue;
  width: 500px;
  border-left: 5px solid green;
  /*将变量写在 属性名或选择器中时，需要添加 */ }

/*2.默认变量 如果变量已经赋值下面使用时按变量的值来显示；
如果 变量没有赋值，那么会显示成默认值*/
.height {
  line-height: 4;
  background: yellow; }

/*3.scss s是可以进行 加减乘除求余的运算，如：数字、颜色、变量等 ，*/
/*最好在运算符前后留一个空格，避免错误出现*/
.ccc {
  position: absolute;
  width: 50%;
  height: 100px;
  /*100px*/
  background: pink;
  top: 60px;
  right: 50px; }

/*4. 嵌套  */
ul {
  border: 1px dotted orange; }
  ul li {
    height: 100px;
    background-color: lightblue; }
    ul li div {
      height: 50px;
      width: 100px;
      background-color: deeppink; }

p {
  border: 1px solid red;
  /*属性嵌套的写法*/
  border-color: green; }

/*在嵌套的代码块内，可以使用 & 引用父元素*/
a:hover {
  color: gold; }

/*5.注释的写法*/
/*6.继承 @extend */
.class1, .class2 {
  border: 5px solid purple; }

.class2 {
  width: 200px;
  height: 50px;
  background-color: yellow; }

/*7.mixin 混入的写法，将重用的代码块整合在一起，作为公共的样式*/
/*定义混入*/
.class2 {
  font-size: 30px;
  color: darkblue;
  /* 调用 混入*/ }

.ccc {
  font-size: 30px;
  color: darkblue; }

/*可以传参数的mixin*/
/*调用*/
ul li div {
  border-bottom: 4px double green; }

.mycolor {
  border-bottom: 4px double orange; }

/*8.color 函数*/
/*可以设置透明度*/
.ceshi1 {
  color: gray;
  margin-top: 100px; }

/*9.使用 @import 引入 外部的 scss文件  ，或 css文件*/
body {
  background: yellow; }
  body h1 {
    background: blue; }
